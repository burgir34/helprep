WAP to perform Multiplication o f two polynomials using 
singly linked list.
#include <stdio.h>
#include <stdlib.h>

// Structure to represent a polynomial term
struct Node {
    int coefficient;
    int exponent;
    struct Node* next;
};

// Function to create a new node
struct Node* createNode(int coefficient, int exponent) {
    struct Node* newNode = (struct Node*)malloc(sizeof(struct Node));
    newNode->coefficient = coefficient;
    newNode->exponent = exponent;
    newNode->next = NULL;
    return newNode;
}

// Function to insert a term into the polynomial
void insertTerm(struct Node** head, int coefficient, int exponent) {
    struct Node* newNode = createNode(coefficient, exponent);
    if (*head == NULL || (*head)->exponent < exponent) {
        newNode->next = *head;
        *head = newNode;
    } else {
        struct Node* temp = *head;
        while (temp->next != NULL && temp->next->exponent > exponent) {
            temp = temp->next;
        }
        if (temp->next != NULL && temp->next->exponent == exponent) {
            temp->next->coefficient += coefficient;
            free(newNode);
        } else {
            newNode->next = temp->next;
            temp->next = newNode;
        }
    }
}

// Function to display the polynomial
void displayPolynomial(struct Node* head) {
    if (head == NULL) {
        printf("0\n");
        return;
    }
    struct Node* temp = head;
    while (temp != NULL) {
        if (temp->coefficient > 0 && temp != head) {
            printf("+");
        }
        printf("%dx^%d ", temp->coefficient, temp->exponent);
        temp = temp->next;
    }
    printf("\n");
}

// Function to multiply two polynomials
struct Node* multiplyPolynomials(struct Node* poly1, struct Node* poly2) {
    struct Node* result = NULL;
    struct Node* temp1 = poly1;
    struct Node* temp2 = poly2;
    
    // Multiply each term of poly1 with each term of poly2
    while (temp1 != NULL) {
        temp2 = poly2;
        while (temp2 != NULL) {
            int coeff = temp1->coefficient * temp2->coefficient;
            int exp = temp1->exponent + temp2->exponent;
            insertTerm(&result, coeff, exp);
            temp2 = temp2->next;
        }
        temp1 = temp1->next;
    }
    return result;
}

// Main function
int main() {
    struct Node* poly1 = NULL;
    struct Node* poly2 = NULL;
    
    // Polynomial 1: 3x^2 + 2x + 1
    insertTerm(&poly1, 3, 2);
    insertTerm(&poly1, 2, 1);
    insertTerm(&poly1, 1, 0);
    
    // Polynomial 2: 5x^1 + 4
    insertTerm(&poly2, 5, 1);
    insertTerm(&poly2, 4, 0);
    
    // Display the two polynomials
    printf("Polynomial 1: ");
    displayPolynomial(poly1);
    
    printf("Polynomial 2: ");
    displayPolynomial(poly2);
    
    // Multiply the polynomials
    struct Node* result = multiplyPolynomials(poly1, poly2);
    
    // Display the result
    printf("Product of Polynomials: ");
    displayPolynomial(result);
    
    return 0;
}
