//WAP to implement Selection sort and Bubble Sort on 1D array of
Employee structure (contains employee_name, emp_no,
emp_salary), with key as emp_no. And count the number of swap
performed.


#include <stdio.h>
#include <string.h>

typedef struct {
    char employee_name[50];
    int emp_no;
    float emp_salary;
} Employee;

// Function to print the array of Employee structures
void printEmployeeArray(Employee employees[], int n) {
    printf("Employee Details:\n");
    for (int i = 0; i < n; i++) {
        printf("Name: %s, Employee No: %d, Salary: %.2f\n", employees[i].employee_name, employees[i].emp_no, employees[i].emp_salary);
    }
}

// Function to swap two Employee structures and count swaps
void swap(Employee *a, Employee *b, int *swap_count) {
    Employee temp = *a;
    *a = *b;
    *b = temp;
    (*swap_count)++;
}

// Selection Sort Implementation
void selectionSort(Employee arr[], int n, int *swap_count) {
    for (int i = 0; i < n - 1; i++) {
        int min_idx = i;

        // Find the minimum element in the unsorted array
        for (int j = i + 1; j < n; j++) {
            if (arr[j].emp_no < arr[min_idx].emp_no) {
                min_idx = j;
            }
        }

        // Swap the found minimum element with the first element
        if (min_idx != i) {
            swap(&arr[i], &arr[min_idx], swap_count);
        }
    }
}

// Bubble Sort Implementation
void bubbleSort(Employee arr[], int n, int *swap_count) {
    for (int i = 0; i < n - 1; i++) {
        for (int j = 0; j < n - i - 1; j++) {
            if (arr[j].emp_no > arr[j + 1].emp_no) {
                swap(&arr[j], &arr[j + 1], swap_count);
            }
        }
    }
}

// Main Function
int main() {
    int n;

    printf("Enter the number of employees: ");
    scanf("%d", &n);

    Employee employees[n];

    // Input Employee Details
    for (int i = 0; i < n; i++) {
        printf("Enter details for employee %d:\n", i + 1);
        printf("Name: ");
        scanf("%s", employees[i].employee_name);
        printf("Employee No: ");
        scanf("%d", &employees[i].emp_no);
        printf("Salary: ");
        scanf("%f", &employees[i].emp_salary);
    }

    // Selection Sort
    Employee selectionSortedEmployees[n];
    memcpy(selectionSortedEmployees, employees, sizeof(employees));
    int selectionSwapCount = 0;
    selectionSort(selectionSortedEmployees, n, &selectionSwapCount);
    printf("\nEmployees sorted by Selection Sort (by emp_no):\n");
    printEmployeeArray(selectionSortedEmployees, n);
    printf("Number of swaps in Selection Sort: %d\n", selectionSwapCount);

    // Bubble Sort
    Employee bubbleSortedEmployees[n];
    memcpy(bubbleSortedEmployees, employees, sizeof(employees));
    int bubbleSwapCount = 0;
    bubbleSort(bubbleSortedEmployees, n, &bubbleSwapCount);
    printf("\nEmployees sorted by Bubble Sort (by emp_no):\n");
    printEmployeeArray(bubbleSortedEmployees, n);
    printf("Number of swaps in Bubble Sort: %d\n", bubbleSwapCount);

    return 0;
}
